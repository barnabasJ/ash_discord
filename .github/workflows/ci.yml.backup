name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }}, Ash ${{ matrix.ash }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ash 3.x with modern Elixir/OTP
          - elixir: '1.17'
            otp: '27'
            ash: '~> 3.4'
            nostrum: '~> 0.10'
            coverage: true
          - elixir: '1.16' 
            otp: '26'
            ash: '~> 3.3'
            nostrum: '~> 0.10'
          - elixir: '1.15'
            otp: '25'
            ash: '~> 3.0'
            nostrum: '~> 0.10'
          # Phoenix 1.8+ compatibility
          - elixir: '1.17'
            otp: '27' 
            ash: '~> 3.4'
            nostrum: '~> 0.10'
            phoenix: '~> 1.8'
    
    env:
      MIX_ENV: test
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}-${{ matrix.ash }}
          restore-keys: |
            deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.ash }}
            deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}
            
      - name: Install dependencies
        run: |
          mix deps.get
          mix compile --warnings-as-errors
        env:
          ASH_VERSION: ${{ matrix.ash }}
          NOSTRUM_VERSION: ${{ matrix.nostrum }}
          PHOENIX_VERSION: ${{ matrix.phoenix || '' }}
          
      - name: Run tests
        run: mix test --warnings-as-errors
        
      - name: Generate test coverage
        if: matrix.coverage
        run: mix coveralls.json
        
      - name: Upload coverage to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./cover/coveralls.json
          
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Elixir  
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.17'
          otp-version: '27'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: deps-quality-${{ runner.os }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-quality-${{ runner.os }}
            
      - name: Install dependencies
        run: mix deps.get
        
      - name: Check formatting
        run: mix format --check-formatted
        
      - name: Run Credo
        run: mix credo --strict
        
      - name: Run Dialyzer
        run: mix dialyzer
        
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Elixir
        uses: erlef/setup-beam@v1  
        with:
          elixir-version: '1.17'
          otp-version: '27'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: deps-docs-${{ runner.os }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-docs-${{ runner.os }}
            
      - name: Install dependencies
        run: mix deps.get
        
      - name: Build docs
        run: mix docs
        
      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: doc/
          retention-days: 7